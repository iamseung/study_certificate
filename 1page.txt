2022-06-23
1. 플랫폼의 유형 (싱투멀)
: 싱글 사이드 / 투 사이드 / 멀티 사이드 플랫폼

2. 플랫폼 성능 특성 측정 항목 (경사응가)
: 경과시간 / 사용률 / 응답시간 / 가용성

3. DBMS 현행 시스템 분석 고려사항 (가성호기구)
: 가용성 / 성능 / 상호호환성 / 기술지원 / 구축비용

4. 데이터 흐름도 구성요소 (프플스터)
: Process / Data Flow / Data Store / Terminator

5. OSI 7 계층 (APSTNDP)
: Application[7] Presentation[6] Session[5] Transport[4] Network[3] Data Link[2] Physical[1]

6. UML 구성요소 (사관다)
: 사물 / 관계 / 다이어그램

7. 정적 다이어그램 (클객 컴배 복패)
: 클래스 / 객체 / 컴포넌트 / 배치 / 복합체 구조 / 패키지

8. 동적 다이어그램 (유시커 상활타)
: 유스케이스 / 시퀀스 / 커뮤니케이션 / 상태 / 활동 / 타이밍

9. UML 의 관계 (연질포 일의실)
: 연관 / 집합 / 포함 / 일반화 / 의존 / 실체화

10. 애자일 선언문 (개변동고)
: 개인과 상호작용 / 변화에 대응 / 동작하는 소프트웨어 / 고객과 협력

11. XP 5가지 가치 (용단의 피존)
: 용기 / 단순성 / 의사소통 / 피드백 / 존중

12. 린 개발방법론 7가지 원칙 (낭품지 확인사전, 낭품지 늦빠사전)
: 낭비제거 / 품질 내재화 / 지식 창출 / 늦은 확정 / 빠른 인도 / 사람 존중 / 전체 최적화

13. 모델링 절차 (요개논물)
: 요구사항 분석 / 개념 모델링 / 논리 모델링 / 물리 모델링

14. UI 유행 (CG NO)
 : CLI / GUI / NUI / OUI

15. UI 표준 구성 요소 (액정 스패초)
: 전체적인 UX 원칙 / 정책 및 철학 / UI 스타일 가이드 / UI 패턴 모델 정의 / UI 표준 수립을 위한 조직 구성

16. UI 컨셉션[개념] (정와스)
: 정보 구조 설계 / 와이어 프레임 스케치 / 스토리보드 설계

17. UI 화면 설계 구분 (와스프)
: 와이어 프레임 / 스토리 보드 / 프로토타입

18. 스토리 보드 작성 절차 (개서스 메추)
: 전체 개요 작성 / 서비스 흐름 작성 / 스타일 확정 / 메뉴별 화면 설계도 작성 및 상세 설계 / 추가 관련 정보 작성

18. UI 설계 프로세스 (문사 작컴 인디)
: 문제 정의 / 사용자 모델 정의 / 작업 분석 / 컴퓨터 오브젝트 및 기능 정의 / 사용자 인터페이스 정의 / 디자인 평가

~2022-06-24
2022-06-26
19. UI 흐름 설계도 (기입 유양)
: 기능 작성 / 입력 요소 확인 / 유스케이스 설계 / 기능 및 양식 확인

20. HIPO 차트 종류 (가총세)
: 가시적 도표 / 총체적 도표 / 세부적 도표

21. 아키텍처 비용 평가모델 종류 (SACAA)
: SAAM / ATAM / CBAM / ADR / ARID

22. 객체지향 구성 요소
: 클래스 / 객체 / 메소드 / 메시지 / 인스턴스 / 속성

23. 객체지향 기법
: 캡슐화 / 상속화 / 다형성 / 추상화 / 정보은닉 / 관계성

24. 객체 모델링 기법 (OMT)의 3가지 모델
: 객체 모델링 / 동적 모델링 / 기능 모델링

25. 디자인 패턴 구성 요소 
: 패턴 이름 / 문제 / 솔루션 / 사례 / 결과 / 샘플 코드
~2022-06-26
목적에 따른 디자인패턴 유형
: 생성 / 구조 / 행위

27. 디자인 패턴 분류 - 생성 패턴
: 생성 - 빌더 / 프로토타입 / 팩토리 메서드 / 앱스트랙 팩토리 / 싱글톤

28. 디자인 패턴 분류 - 구조 패턴 (빌프팩앱싱)
: 구조 - 브리지 / 데코레이터 / 퍼사이드 / 플라이 웨이트 / 프록시 / 컴포지트 / 어댑터

29. 요구사항 개발 단계 (브데퍼플프컴어)
: 요구사항 도출 / 요구사항 분석 / 요구사항 명세 / 요구사항 확인 및 검증

30. 요구사항 명세 원리 및 검증 항목 (명완검 일수추개)
: 명확성 / 완정성 / 검증 가능성 / 일관성 / 수정 용이성 / 추적 가능성 / 개발 후 이용성

31. 요구사항 관리 절차 (협기변확)
: 요구사항 협상 / 요구사항 기준선 / 요구사항 변경관리 / 요구사항 확인 및 검증

32. 요구사항 검토 기법 (동워인)
: 동료 검토 / 워크 스루 / 인스펙션

33. 시스템 아키텍처의 설계 원칙
: 대규모 트랜잭션 처리 및 온라인 성능 보장 / 시스템 아키텍처 확장성 보장 / 서비스 고가용성 보장 /
: 운영관리 효율성 / 시스템 보안 강화

34. 인터페이스 시스템 구성
: 송신 시스템 / 수신 시스템 / 중계 서버d

35. 데이터 표준 (공개종)
: 인터페이스 데이터 공통부 / 인터페이스 데이터 개별부 / 인터페이스 데이터 종료부

36. 내 & 외부 송/수신 연계 기술
: DB link / DB connection / Api / Open Api / JDBC / Hyper Link / Socket 기술

37. 개체 정의서 ?
: 논리 DB 명 / 엔터티 명 / 앤터티 설명 / 주 식별자 / 슈퍼타입 엔티티 명 

38. 인터페이스 오류 유형 (서데송수)
: 연계 서버 / 송신 시스템 연계 프로그램 / 연계 데이터 / 수신 시스템 연계 프로그램

39. 인터페이스 정의서 주요 항목 (인최데시데) 
: 인터페이스 ID / 최대 처리 횟수 / 데이터 크기 ( 평균 / 최대 ) / 시스템 정보 / 데이터 정보

40. 미들웨어 솔루션 유형
: DB 미들웨어 / 원격 프로시저 호출 / 메시지 지향 미들웨어 / 트랜잭션 처리 모니터 / 레거시웨어 / 객체기반 미들웨어 / WAS

41. EAI 와 ESB 의 세부 기술 및 토폴로지 (허어브메)
: 허브앤 스포크 / 어댑터 / 브로커 / 메시지 큐

42. 논리 데이터 저장소 구조 (관개속)
: 개체 / 속성 / 관계

43. 파티셔닝 유형 (레해리컴)
: 레인지 파티셔닝 / 해시 파티셔닝 / 리스트 파티셔닝 / 컴포지트 파티셔닝

44. 파티션의 장점 (성가백경)
: 성능 향상 / 가용성 향상 / 백업 가능 / 경합감소

45. PL / SQL 저장형 객체 활용 (프함패트)
: 저장된 프로시저 / 함수 / 패키지 / 트리거

46. 단위모듈 구현 원리 (정분추모)
: 정보은닉 / 분할과 정복 / 추상화 / 모듈 독립성

47. 형상관리 도구 기능
: 체크인 / 체크아웃 / 커밋

48. 형상관리 도구 사례 (CSG)
: CVS / SVN / Git

* 소프트웨어 패키징 
=> 불법 복제로부터 디지털 콘텐츠의 지적 재산권을 보호하고 관리하는 기능을 제공하며, 안전한 유통과 배포를 보장하는 도구
49. 패키징 고려 사항 (시유관패)
: 사용자 시스템 환경 정의(복잡성 및 비효율성 문제) / UI 제공 / 관리 서비스 형태로 제공 / 패키징의 변경 및 개선 관리 고려

50. 배포 도구 구성 요소
: 암호화 / 키 관리 / 식별 기술 / 저작권 표현 / 암호화 파일 생성 / 정책 관리 / 크랙 방지 / 인증

51. 제품 소프트웨어 패키징 도구 활용 고려사항 (암이복최)
: 암호화 & 보안 / 이기종 연동 / 복잡성 및 비효율성 문제 / 최적합 암호화 알고리즘 적용

*DRM
=> 각종 디지털 컨텐츠의 허용되지 않은 접근 및 불법 복제를 제한하는 프로그램
52. DRM 구성요소 
: 콘텐츠 제공자 (DRM 콘텐처/패키저)  / 클리어링 하우스(키 관리 및 라이선스 발급 관리) / 콘텐츠 소비자(DRM 컨트롤러 / 보안 컨테이너)

* ISO 9126 
=> 소프트 웨어 품질의 특성을 정의하고 품질 평가의 Metrics를 정의한 국제표준
53. ISO 9126 품질 특성 (기신사효유이)
: 기능성 / 신뢰성 / 사용성 / 효율성 / 유지보수성 / 이식성

54. ISO/IEC 14598 품질 특성
: 반복성 / 재현성 / 공정성 / 객관성

55. ISO/IEC 25000 구성요소 (관모측요평)
: 품질 관리 / 품질 모델 / 품질 측정 / 품질 요구 / 품질 평가


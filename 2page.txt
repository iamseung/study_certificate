56. 버전 관리 도구 유형 (공클분)
: 공유 폴더 방식 / 클라이언트&서버 방식 / 분산 저장소 방식

*빌드 자동화
=> 소프트웨어 개발자가 반복해서 하는 코딩을 잘 짜여진 프로세스를 통해 자동으로 실행하여, 
믿을 수 있는 결과물도 생산해 낼 수 있는 일련의 작업방식 및 방법
57. 빌드 자동화 구성요소 (CS 빌테커인)
: CI서버 / SCM / 빌드 도구 / 테스트 도구 / 테스트 커버리지 도구 / 인스펙션 도구

58. 테스트 오라클 종류 (참샘휴일)
: 참 오라클 / 샘플링 오라클 / 휴리스틱 오라블 / 일관성 검사 오라클

59. 테스트 레벨 종류 (단통시인)
: 단위 테스트 / 통합 테스트 / 시스템 테스트 / 인수 테스트

*화이트박스 테스트
=> 소프트웨어 혹은 제품의 내부 구조, 동작을 세밀하게 검사하는 테스트 방식으로, 
외부에서 요구사항에 따른 예상 결과값을 테스트 하는 것과는 다르게 내부 소스 코드를 테스트하는 기법으로 사용자가 들여다 볼 수 없는 구간의 코드 단위를 테스트 한다. 
60. 화이트박스 테스트 유형 (구결조 조변다 기제데)
: 구문 / 결정 / 조건 / 조건-결정 / 변경 조건-결정 / 다중 조건 / 기본 경로 커버리지 / 제어 흐름 테스트 / 데이터 흐름 테스트

*블랙박스 테스트
=> 소프트웨어의 내부 구조나 작동 원리를 모르는 상태에서 소프트웨어의 동작을 검사하는 방법.
61: 블랙박스 테스트 유형 (동경결상 유분페윈비)
: 동등 분할 / 경계값 분석 / 결정 테이블 / 상태전이 / 유스케이스 / 분류트리 / 페어와이즈 / 원인-결과 그래프 / 비교테스트

62. 테스트 목적에 따른 분류 (회안성 구회병)
: 회복 / 안전 / 성능 / 구조 / 회귀 / 병행 테스트

63. 성능 테스트의 상세 유형 (부스스내)
: 부하 테스트 / 스트레스 테스트 / 스파이크 테스트 / 내구성 테스트 

64. 소프트웨어 테스트의 원리 (결완초집 살정오)
: 결함이 존재 / 완벽한 테스팅 불가능 / 초기에 테스팅 시작 / 결함집중 / 살충제 패러독스 / 정황에 의존 / 오류 부재의 궤변

*테스트 장치
=> 소프트웨어 혹은 제품의 내부 구조, 동작을 세밀하게 검사하는 테스트 방식으로, 
외부에서 요구사항에 따른 예상 결과값을 테스트 하는 것과는 다르게 내부 소스 코드를 테스트하는 기법으로 사용자가 들여다 볼 수 없는 구간의 코드 단위를 테스트 한다. 
65. 테스트 장치 구성요소 (드스슈케시스목)
: 드라이버 / 스텁 / 슈트 / 케이스 / 시나리오 / 스크립트 / 목 오브젝트 

66. 하향식/상향식 통합 수행단계
: 하향식 - 스텁 / 상향식 - 드라이버

67. 알고리즘 기법 (분동탐백)
: 분할과 정복 / 동적계획법 / 탐욕법 / 백트래킹

68. 클린 코드의 작성 원칙 (가단의 중추)
: 가독성 / 단순성 / 의존성 최소 / 중복성 제거 / 추상화

69. 인터페이스 정의서 주요 항목 (인최 크시정)
: 인터페이스 ID / 최대 처리 횟수 / 데이터 크기(평균&최대) / 시스템 정보 / 데이터 정보

* EAI
=> Enterprise Architecture Integration : 기업 애플리케이션 통합
70. EAI 구축 유형 (포허 메하)
: 포인트 투 포인트 / 허브 앤 스포크 / 메시지 버스 / 하이브리드

71. 시큐어 코딩 가이드 적용 대상 (입보시 에코캡아)
: 입력데이터 검증 및 표현 / 보안 기능 / 시간 및 상태 / 에러처리 / 코드오류 / 캡슐화 / API 호응

72. 데이터베이스 암호화 알고리즘 유형 (대비해)
: 대칭 키 암호화 알고리즘 / 비대칭 키 암호화 알고리즘 / 해시 암호화 알고리즘

73. 데이터베이스 암호화 기법 유형 (애플하)
: API / Plug-in / Hybrid 방식

74. 인터페이스 구현 검증도구 (엑스피 엔셀웨)
: xUnit / STAF / Fitness / NTAF / Setenium / watir

*트리거
=> 트리거는 데이터베이스 시스템에서 삽입, 갱신, 삭제 등의 이벤트가 발생할 때마다 관련 작업이 자동으로 수행되는 절차형 SQL이다.
75. 트리거 구성 (디이비컨 SE) + EVENT
: DECLARE / EVENT / BEGIN_END / CONTROL / SQL / EXCEPTION

76. 사용자 정의함수 구성 (디비컨 SER) + RETURN
: DECLARE / BEGIN_END / CONTROL / SQL / EXCEPTION / RETURN

77. 명령어 종류 (정조제)
: 데이터 정의어 (DDL) / 데이터 조직어 (DML) / 데이터 제어어 (DCL)

78. DML(데이터 조작어)의 유형
: SELECT / INSERT / UPDATE / DELETE

79. SELECT 명령문
: SELELCT / FROM / WHERE / GROUP BY / ORDER BY / HAVING

* GRANT / REVOKE / COMMIT / ROLLBACK : DB에 접근하고 객체들을 사용하도로 권한을 부여&해제
80. 데이터 제어어 기능 (보무병회)
: 데이터 보안 / 무결성 유지 / 병행수행 제어 / 회복

81. 윈도우 함수의 분류 (집 순행비)
: 집계 / 순위 / 행순서 / 그룹 내 비율 함수

82. 핸들러 선언 구문 (액상명)
: 액션 / 상태값 / 명령문

83. DDL 대상 (도스테뷰인)
: 도메인  / 스키마 / 테이블 / 뷰 / 인덱스

84. DDL 명령어 (CADT)
: CREATE / ALTER / DROP / TRUNCATE 

85. 트랜잭션의 특징 (ACID)
: Atomicity / Consistency / Isolation / Durability